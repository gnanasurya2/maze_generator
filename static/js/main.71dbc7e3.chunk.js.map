{"version":3,"sources":["components/NewMaze.js","components/Slider.js","App.js","reportWebVitals.js","index.js","Maze.module.css","components/Slider.module.css"],"names":["Cells","NewMaze","props","useState","restart","setRestart","stack","setStack","current","setCurrent","numberOfVisited","setNumberOfVisited","tracked","setTracked","numberOfPixel","pixelSize","wallSize","mazeState","setMazeState","canvasRef","useRef","Cell","x","y","this","rightWall","downWall","visited","display","console","log","fillWalls","side","ctx","getContext","fillStyle","fillRect","useEffect","onEnd","clearRect","canvas","width","height","length","onCompleted","findReverse","index","ele","diff","tracker","state","slice","color","loc","dir","left","up","right","down","mazeGenerator","neighbours","push","filter","findNeighbours","mazeController","selected","Math","floor","random","next","difference","removeWalls","setTimeout","last","newStack","spaceW","Pixels","spaceH","cell","ref","Slider","className","styles","wrapper","text","value","type","min","max","onChange","App","mazeToggle","showControls","setShowControls","setUp","setDown","setLeft","setRight","completed","setCompleted","setNumberOfPixel","keyPressHandler","e","code","window","addEventListener","removeEventListener","app","onKeyDown","controls","event","target","maze","style","movement","row","but","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.71dbc7e3.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nlet Cells = [];\r\nconst NewMaze = (props) => {\r\n  const [restart, setRestart] = useState(true);\r\n  const [stack, setStack] = useState([]);\r\n  const [current, setCurrent] = useState(null);\r\n  const [numberOfVisited, setNumberOfVisited] = useState(0);\r\n  const [tracked, setTracked] = useState([0]);\r\n  const { numberOfPixel, pixelSize, wallSize } = props;\r\n  const [mazeState, setMazeState] = useState(true);\r\n\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (canvasRef.current !== null) {\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n        setMazeState(() => false);\r\n        setRestart(true);\r\n        setStack([]);\r\n        setCurrent(null);\r\n        setNumberOfVisited(0);\r\n        setTracked([0]);\r\n        Cells = [];\r\n        props.onEnd(false);\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      }\r\n    };\r\n  }, [numberOfPixel, pixelSize, wallSize]);\r\n  function Cell(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.rightWall = false;\r\n    this.downWall = false;\r\n    this.visited = false;\r\n    this.display = () => {\r\n      console.log(this.x, this.y, this.visited);\r\n    };\r\n    this.fillWalls = (side) => {\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      ctx.fillStyle = \"red\";\r\n      if (side === 1) {\r\n        this.rightWall = true;\r\n        ctx.fillRect(this.x + pixelSize, this.y, wallSize, pixelSize);\r\n      } else {\r\n        this.downWall = true;\r\n        ctx.fillRect(this.x, this.y + pixelSize, pixelSize, wallSize);\r\n      }\r\n    };\r\n  }\r\n  useEffect(() => {\r\n    if (tracked[tracked.length - 1] === numberOfPixel ** 2 - 1) {\r\n      props.onCompleted(true);\r\n    }\r\n  }, [tracked]);\r\n  const findReverse = (index) => {\r\n    const ele = tracked[tracked.length - 2],\r\n      current = tracked[tracked.length - 1];\r\n    if (ele && ele === index) {\r\n      const diff = current - ele;\r\n      console.log(diff, ele, current);\r\n      diff > 0\r\n        ? diff === numberOfPixel\r\n          ? tracker(index, \"red\", true, false)\r\n          : tracker(index, \"red\", true, true)\r\n        : diff === -numberOfPixel\r\n        ? tracker(index, \"red\", true, true)\r\n        : tracker(current, \"red\", false, false);\r\n      setTracked((state) => state.slice(0, state.length - 1));\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  const tracker = (index, color, loc, dir) => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.fillStyle = color;\r\n    let x = Cells[index].x,\r\n      y = Cells[index].y,\r\n      width = pixelSize,\r\n      height = pixelSize;\r\n    if (loc) {\r\n      if (dir) {\r\n        x += pixelSize;\r\n      } else {\r\n        y += pixelSize;\r\n      }\r\n    }\r\n    if (dir) {\r\n      width += wallSize;\r\n    } else {\r\n      height += wallSize;\r\n    }\r\n    console.log(x, y, width, height, index);\r\n    ctx.fillRect(x, y, width, height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.left !== 0) {\r\n      const current = tracked[tracked.length - 1];\r\n      if (\r\n        current - 1 > 0 &&\r\n        current % numberOfPixel !== 0 &&\r\n        Cells[current - 1].rightWall &&\r\n        findReverse(current - 1)\r\n      ) {\r\n        tracker(current - 1, \"green\", false, true);\r\n        setTracked((state) => [...state, current - 1]);\r\n      }\r\n    }\r\n  }, [props.left]);\r\n  useEffect(() => {\r\n    if (props.up !== 0) {\r\n      const current = tracked[tracked.length - 1];\r\n      if (\r\n        current - numberOfPixel > 0 &&\r\n        Cells[current - numberOfPixel].downWall &&\r\n        findReverse(current - numberOfPixel)\r\n      ) {\r\n        tracker(current - numberOfPixel, \"green\", false, false);\r\n        setTracked((state) => [...state, current - numberOfPixel]);\r\n      }\r\n    }\r\n  }, [props.up]);\r\n\r\n  useEffect(() => {\r\n    if (props.right !== 0) {\r\n      const current = tracked[tracked.length - 1];\r\n      if (\r\n        Cells[current].rightWall &&\r\n        current + 1 < numberOfPixel ** 2 &&\r\n        (current + 1) % numberOfPixel !== 0 &&\r\n        findReverse(current + 1)\r\n      ) {\r\n        tracker(current, \"green\", true, true);\r\n        setTracked((state) => [...state, current + 1]);\r\n      }\r\n    }\r\n  }, [props.right]);\r\n  useEffect(() => {\r\n    if (props.down !== 0) {\r\n      const current = tracked[tracked.length - 1];\r\n      if (\r\n        Cells[current].downWall &&\r\n        current + numberOfPixel < numberOfPixel ** 2 &&\r\n        findReverse(current + numberOfPixel)\r\n      ) {\r\n        tracker(current, \"green\", true, false);\r\n        setTracked((state) => [...state, current + numberOfPixel]);\r\n      }\r\n    }\r\n  }, [props.down]);\r\n  const findNeighbours = (index) => {\r\n    const neighbours = [];\r\n    if (index - numberOfPixel > 0) {\r\n      neighbours.push(index - numberOfPixel);\r\n    }\r\n    if (index + numberOfPixel < numberOfPixel ** 2) {\r\n      neighbours.push(index + numberOfPixel);\r\n    }\r\n    if (index - 1 > 0 && index % numberOfPixel !== 0) {\r\n      neighbours.push(index - 1);\r\n    }\r\n    if (index + 1 < numberOfPixel ** 2 && (index + 1) % numberOfPixel !== 0) {\r\n      neighbours.push(index + 1);\r\n    }\r\n    return neighbours.filter((ele) => {\r\n      if (Cells.length && ele) {\r\n        return Cells[ele].visited !== true;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n  const removeWalls = (current, next) => {\r\n    const difference = next - current;\r\n    if (difference === 1) {\r\n      Cells[current].fillWalls(1);\r\n    } else if (difference === -1) {\r\n      Cells[next].fillWalls(1);\r\n    } else if (difference > 0) {\r\n      Cells[current].fillWalls(-1);\r\n    } else {\r\n      Cells[next].fillWalls(-1);\r\n    }\r\n  };\r\n  const mazeController = () => {\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    ctx.fillStyle = \"green\";\r\n    ctx.fillRect(0, 0, pixelSize, pixelSize);\r\n    ctx.fillStyle = \"blue\";\r\n    ctx.fillRect(\r\n      numberOfPixel * (wallSize + pixelSize) - pixelSize,\r\n      numberOfPixel * (wallSize + pixelSize) - pixelSize,\r\n      pixelSize,\r\n      pixelSize\r\n    );\r\n  };\r\n  const mazeGenerator = (index) => {\r\n    const neighbours = findNeighbours(index);\r\n    if (numberOfVisited === numberOfPixel ** 2 - 1) {\r\n      mazeController();\r\n      props.onEnd(true);\r\n      return;\r\n    }\r\n    //STEP 2.1\r\n    if (neighbours.length != 0) {\r\n      //STEP 2.1.1\r\n      const random = Math.floor(Math.random() * neighbours.length);\r\n      const selected = neighbours[random];\r\n      //STEP 2.1.2\r\n      setStack((state) => [...state, index]);\r\n      //STEP 2.1.3\r\n      removeWalls(index, selected);\r\n      if (Cells[selected].visited === false) {\r\n        setNumberOfVisited((state) => state + 1);\r\n      }\r\n      Cells[selected].visited = true;\r\n      setTimeout(() => setCurrent(selected), 10);\r\n    } else if (stack.length > 0) {\r\n      const last = stack[stack.length - 1];\r\n      const newStack = stack.slice(0, stack.length - 1);\r\n      setStack((state) => newStack);\r\n      setTimeout(() => setCurrent(last), 10);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (current !== null && mazeState) {\r\n      mazeGenerator(current);\r\n    }\r\n  }, [current]);\r\n\r\n  useEffect(() => {\r\n    if (restart != null) {\r\n      props.onCompleted(false);\r\n      const canvas = canvasRef.current;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      setRestart(null);\r\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n      ctx.fillStyle = \"red\";\r\n      const Pixels = [];\r\n      let spaceH = 0,\r\n        spaceW;\r\n      while (spaceH < ctx.canvas.height) {\r\n        spaceW = 0;\r\n        while (spaceW < ctx.canvas.width) {\r\n          ctx.fillRect(spaceW, spaceH, pixelSize, pixelSize);\r\n          const cell = new Cell(spaceW, spaceH);\r\n          Pixels.push(cell);\r\n          spaceW += pixelSize + wallSize;\r\n        }\r\n        spaceH += pixelSize + wallSize;\r\n      }\r\n      Cells = [...Pixels];\r\n      //STEP 1\r\n      setMazeState(true);\r\n      setNumberOfVisited(1);\r\n      setCurrent(0);\r\n    }\r\n  }, [restart]);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width={(wallSize + pixelSize) * numberOfPixel - wallSize}\r\n      height={(wallSize + pixelSize) * numberOfPixel - wallSize}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NewMaze;\r\n","import styles from \"./Slider.module.css\";\r\n\r\nconst Slider = (props) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1>Maze size</h1>\r\n      <h1 className={styles.text}>{props.value}</h1>\r\n      <input\r\n        type=\"range\"\r\n        min={props.min}\r\n        max={props.max}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Maze from \"./components/NewMaze\";\nimport Slider from \"./components/Slider\";\nimport styles from \"./Maze.module.css\";\nfunction App() {\n  const [mazeToggle, setMazetoggle] = useState(true);\n  const [showControls, setShowControls] = useState(false);\n  const [up, setUp] = useState(0);\n  const [down, setDown] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [right, setRight] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [numberOfPixel, setNumberOfPixel] = useState(4);\n  const keyPressHandler = (e) => {\n    const code = e.code;\n    if (code === \"KeyW\") {\n      setUp((state) => state + 1);\n    } else if (code === \"KeyD\") {\n      setRight((state) => state + 1);\n    } else if (code === \"KeyS\") {\n      setDown((state) => state + 1);\n    } else if (code === \"KeyA\") {\n      setLeft((state) => state + 1);\n    }\n  };\n  useEffect(() => {\n    console.log(numberOfPixel);\n  }, [numberOfPixel]);\n  useEffect(() => {\n    if (showControls) {\n      window.addEventListener(\"keypress\", keyPressHandler);\n    }\n    return () => window.removeEventListener(\"keypress\", keyPressHandler);\n  }, [showControls]);\n  return (\n    <div className={styles.app} onKeyDown={(e) => console.log(\"ckjaj\")}>\n      <div className={styles.controls}>\n        {showControls || true ? (\n          <Slider\n            min={4}\n            max={30}\n            value={numberOfPixel}\n            onChange={(event) => setNumberOfPixel(+event.target.value)}\n          />\n        ) : null}\n      </div>\n      <div className={styles.maze}>\n        <Maze\n          numberOfPixel={numberOfPixel}\n          pixelSize={24}\n          wallSize={4}\n          mazeState={mazeToggle}\n          onEnd={(state) => setShowControls(state)}\n          onCompleted={(state) => setCompleted(state)}\n          up={up}\n          down={down}\n          left={left}\n          right={right}\n        />\n        {completed ? <h1 style={{ color: \"green\" }}>completed</h1> : null}\n      </div>\n      <div className={styles.movement}>\n        {showControls ? (\n          <div>\n            <div className={styles.row}>\n              <button\n                className={styles.but}\n                onClick={() => setUp((state) => state + 1)}\n              >\n                up\n              </button>\n            </div>\n            <div className={styles.row}>\n              <button\n                className={styles.but}\n                onClick={() => setLeft((state) => state + 1)}\n              >\n                left\n              </button>\n              <button\n                className={styles.but}\n                onClick={() => setDown((state) => state + 1)}\n              >\n                bottom\n              </button>\n              <button\n                className={styles.but}\n                onClick={() => setRight((state) => state + 1)}\n              >\n                right\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Maze_row__1uNhP\",\"but\":\"Maze_but__EIOX3\",\"slider\":\"Maze_slider__1nejW\",\"app\":\"Maze_app__3m9Eq\",\"controls\":\"Maze_controls__2TPte\",\"maze\":\"Maze_maze__38rCF\",\"movement\":\"Maze_movement__2BRMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Slider_wrapper__1yCH6\",\"text\":\"Slider_text__3mdAL\"};"],"sourceRoot":""}